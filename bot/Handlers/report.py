import math
from docxtpl import DocxTemplate
from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup,
)
from telegram.ext import (
    ConversationHandler, ContextTypes, CallbackContext
)

from bot.config import ADMIN_IDS
from database.db import SessionLocal


async def start(update: Update, context: CallbackContext):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /start.
    """
    db = SessionLocal()
    greeting = f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! üëã\n"
    greeting += "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–π.\n"
    greeting += "–£–∑–Ω–∞–π—Ç–µ –æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö, —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /help.\n"
    await update.message.reply_text(greeting)

async def help(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    if is_admin(update):
        cmds = [
            ("/help",             "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥"),
            ("/vacancies",        "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π"),
            ("/vacancy_add",      "–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é"),
            ("/vacancy_del",      "–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é"),
            ("/comment <id>",     "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–º–µ—Ç–∫—É —Å—Ç—É–¥–µ–Ω—Ç—É"),
            ("/export_students",  "–≠–∫—Å–ø–æ—Ä—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ XLSX"),
            ("/cancel",           "–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"),
        ]
    else:
        cmds = [
            ("/start",       "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"),
            ("/help",        "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
            ("/vacancies",   "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π"),
            ("/apply",       "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"),
            ("/cancel",      "–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"),
        ]
    text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" + "\n".join(f"{c} ‚Äî {d}" for c, d in cmds)
    await update.message.reply_text(text)

async def cancel(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ.")
    return ConversationHandler.END

def is_admin(update) -> bool:
    user = update.effective_user
    return bool(user and user.id in ADMIN_IDS)
